// This is your Prisma schema file

// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  // https://github.com/prisma/prisma/issues/4769#issuecomment-750018603
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model Reservation {
  id             Int           @id @default(autoincrement())
  startStation   Station
  endStation     Station
  ticketDate     DateTime
  bookDate       DateTime      @db.Date
  bookingMethod  BookingMethod
  trainNo        Int
  carType        CarType
  seatType       SeatType
  taiwanId       String
  email          String
  phone          String
  adultTicket    Int           @db.SmallInt
  childTicket    Int           @db.SmallInt
  disabledTicket Int           @db.SmallInt
  elderTicket    Int           @db.SmallInt
  collegeTicket  Int           @db.SmallInt
  memberType     MemberType
  isDeleted      Boolean       @default(false)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  ticketResult   TicketResult?
  ticketErrors   TicketError[]
}

model TicketResult {
  id            Int         @id @default(autoincrement())
  ticketId      String
  trainNo       Int
  departureTime String
  arrivalTime   String
  duration      String
  totalPrice    Int
  creatdAt      DateTime    @default(now())
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int         @unique
}

model TicketError {
  id            Int             @id @default(autoincrement())
  message       String
  errorType     TicketErrorType
  createdAt     DateTime        @default(now())
  reservation   Reservation     @relation(fields: [reservationId], references: [id])
  reservationId Int
}

model Discount {
  type             DiscountType
  trainNo          Int
  date             DateTime
  minDiscountRatio Int
  createdAt        DateTime     @default(now())

  @@unique([type, trainNo, date])
}

model SpecialBookDay {
  name         String
  startDate    DateTime @unique
  endDate      DateTime @unique
  startBookDay DateTime @unique
  createdAt    DateTime @default(now())
}

enum DiscountType {
  earlyBird
  college
}

enum TicketErrorType {
  solvingCaptchaWrongy
  internalServerError
  unknown
}

enum Station {
  NanGang
  TaiPei
  BanQiao
  TaoYuan
  XinZhu
  MiaoLi
  TaiZhong
  ZhangHua
  YunLin
  JiaYi
  TaiNan
  ZuoYing
}

enum BookingMethod {
  trainNo
  time
}

enum CarType {
  Standard
  Business
}

enum SeatType {
  NoRequired
  WindowSeat
  AisleSeat
}

enum MemberType {
  NotMember
  Member
}
